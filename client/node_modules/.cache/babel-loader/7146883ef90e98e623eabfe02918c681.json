{"ast":null,"code":"var _jsxFileName = \"/Users/yannafaith/Desktop/NuancityBlockstack/src/App.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport NewUserPage from './views/NewUserPage.js';\nimport Nav from './components/Nav.jsx';\nimport { SinglePost } from './views/SinglePost.js';\nimport Landing from './views/Landing.js';\nimport Topics from './views/Topics.js';\nimport Dashboard from './views/Dashboard.js';\nimport TopicFeed from './views/TopicFeed.js';\nimport { Route } from \"react-router-dom\";\nimport { UserSession, AppConfig } from 'blockstack';\nimport './App.css';\nconst appConfig = new AppConfig();\nconst userSession = new UserSession({\n  appConfig: appConfig\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n  }\n\n  handleSignIn(e) {\n    e.preventDefault();\n    userSession.redirectToSignIn();\n  }\n\n  handleSignOut(e) {\n    e.preventDefault();\n    userSession.signUserOut(window.location.origin);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      data: this.data,\n      session: this.userSession,\n      signIn: this.handleSignIn,\n      signOut: this.handleSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newUser\",\n      component: () => React.createElement(NewUserPage, {\n        handleSignOut: this.handleSignOut,\n        handleSignIn: this.handleSignIn,\n        session: userSession,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/topics\",\n      component: Topics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/topic\",\n      component: TopicFeed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/post\",\n      component: SinglePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n  componentWillMount() {\n    if (userSession.isSignInPending() && !userSession.isUserSignedIn()) {\n      userSession.handlePendingSignIn().then(userData => {\n        this.setState({\n          data: userData\n        });\n        window.location = window.location.origin;\n      });\n    }\n  }\n\n}\n\nexport default App; // componentWillMount() {\n//   const session = this.userSession\n//   if(!session.isUserSignedIn() && session.isSignInPending()) {\n//     session.handlePendingSignIn()\n//     .then((userData) => {\n//       if(!userData.username) {\n//         throw new Error('This app requires a username.')\n//       }\n//       window.location = `/kingdom/${userData.username}`\n//     })\n//   }\n// }","map":{"version":3,"sources":["/Users/yannafaith/Desktop/NuancityBlockstack/src/App.js"],"names":["React","Component","useState","useEffect","NewUserPage","Nav","SinglePost","Landing","Topics","Dashboard","TopicFeed","Route","UserSession","AppConfig","appConfig","userSession","App","state","data","handleSignIn","e","preventDefault","redirectToSignIn","handleSignOut","signUserOut","window","location","origin","render","componentWillMount","isSignInPending","isUserSignedIn","handlePendingSignIn","then","userData","setState"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport NewUserPage from './views/NewUserPage.js';\nimport Nav from './components/Nav.jsx';\nimport { SinglePost } from './views/SinglePost.js';\nimport Landing from './views/Landing.js';\nimport Topics from './views/Topics.js';\nimport Dashboard from './views/Dashboard.js';\nimport TopicFeed from './views/TopicFeed.js';\nimport { Route } from \"react-router-dom\";\nimport { UserSession, AppConfig } from 'blockstack';\nimport './App.css';\n\nconst appConfig = new AppConfig()\nconst userSession = new UserSession({ appConfig: appConfig })\n\n\nclass App extends Component {\n\n  state =  {\n    data: null\n  }\n\n\nhandleSignIn(e) {\n  e.preventDefault();\n  userSession.redirectToSignIn();\n}\n\nhandleSignOut(e) {\n  e.preventDefault();\n  userSession.signUserOut(window.location.origin);\n}\n\n  render () {\n      return (\n        <div className = \"App\" >\n          <Nav \n            data = { this.data }\n            session = { this.userSession }\n            signIn = { this.handleSignIn } \n            signOut = { this.handleSignOut } \n          />\n          <Route \n            path = '/newUser' \n            component = { () => <NewUserPage \n              handleSignOut = { this.handleSignOut } \n              handleSignIn = { this.handleSignIn } \n              session = { userSession }\n              />\n            }\n          />\n          <Route exact path='/' component={ Landing } />\n          <Route path='/topics' component={ Topics } />\n          <Route path='/topic' component={ TopicFeed } />\n          <Route path='/dashboard' component={ Dashboard } />\n          <Route path='/post' component={ SinglePost } />\n        </div>\n      );\n\n    }\n    componentWillMount() {\n      if (userSession.isSignInPending() && !userSession.isUserSignedIn() ) {\n        userSession.handlePendingSignIn().then( ( userData ) => {\n          this.setState( { data: userData } );\n          window.location = window.location.origin;\n        });\n      }\n    }\n\n}\n\n\nexport default App;\n\n\n// componentWillMount() {\n//   const session = this.userSession\n//   if(!session.isUserSignedIn() && session.isSignInPending()) {\n//     session.handlePendingSignIn()\n//     .then((userData) => {\n//       if(!userData.username) {\n//         throw new Error('This app requires a username.')\n//       }\n//       window.location = `/kingdom/${userData.username}`\n//     })\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}