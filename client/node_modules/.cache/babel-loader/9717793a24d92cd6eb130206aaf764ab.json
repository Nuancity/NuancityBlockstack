{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yannafaith/Desktop/NuancityBlockstack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yannafaith/Desktop/NuancityBlockstack/src/components/SearchTab.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"{\\n    // border: solid silver 1px;\\n    display: flex;\\n    // flex-direction: column;\\n    height: 100%;\\n    align-items: space-around;\\n    display: flex;\\n    flex-direction: column;\\n}\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"{\\n    width: \", \" \\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: space-around;\\n    background-color: white;\\n    // background-color: whitesmoke;\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { styled as styledm } from '@material-ui/styles'; // import { engineering } from '../MockData.js';\n\nconst Wrapper = styled.div(_templateObject(), props => props.width || '20vw');\nconst List = styled.ul(_templateObject2());\n\nconst getButtons = cnt => {\n  let buttons = [];\n\n  while (cnt > 0) {\n    buttons.push(cnt);\n    cnt--;\n  }\n\n  return buttons;\n};\n\nconst colors = {\n  'red': '#ffebee',\n  'green': '#e8f5e9',\n  'purple': '#ede7f6',\n  'blue': '#e3f2fd',\n  'primary': '#e8eaf6',\n  'secondary': '#fce4ec'\n};\n\nconst SearchTab = props => {\n  const CustomButton = styledm(Button)({\n    borderColor: props.color,\n    color: props.color,\n    backgroundColor: colors[props.color],\n    '&:hover': {\n      // border: `solid ${colors[ props.color ]} 2px`,\n      border: \"solid \".concat(props.color, \" 1px\"),\n      backgroundColor: props.color,\n      color: 'white'\n    },\n    margin: '8px' // border: 'none'\n\n  });\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.color === 'primary' || props.color === 'secondary' ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, getButtons(props.count).map(topic => {\n    return React.createElement(\"li\", {\n      id: \"topic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(CustomButton, {\n      variant: props.variant || 'outlined',\n      color: props.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" Abnormal Psychology   \"), \" \");\n  })) : React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, getButtons(props.count).map(num => {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", React.createElement(CustomButton, {\n      id: \"topic\",\n      color: props.color,\n      variant: props.variant || 'outlined',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Abnormal Psychology  \"), \" \");\n  })));\n};\n\nexport default SearchTab;","map":{"version":3,"sources":["/Users/yannafaith/Desktop/NuancityBlockstack/src/components/SearchTab.jsx"],"names":["React","styled","Button","styledm","Wrapper","div","props","width","List","ul","getButtons","cnt","buttons","push","colors","SearchTab","CustomButton","borderColor","color","backgroundColor","border","margin","count","map","topic","variant","num"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASD,MAAM,IAAKE,OAApB,QAAmC,qBAAnC,C,CACA;;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,oBACCC,KAAK,IAAIA,KAAK,CAACC,KAAN,IAAe,MADzB,CAAb;AAUA,MAAMC,IAAI,GAAGP,MAAM,CAACQ,EAAV,oBAAV;;AAUA,MAAMC,UAAU,GAAKC,GAAF,IAAW;AAC1B,MAAIC,OAAO,GAAG,EAAd;;AACA,SAAQD,GAAG,GAAG,CAAd,EAAkB;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAcF,GAAd;AACAA,IAAAA,GAAG;AACN;;AACD,SAAOC,OAAP;AACH,CAPD;;AAQA,MAAME,MAAM,GAAG;AACX,SAAQ,SADG;AAEX,WAAU,SAFC;AAGX,YAAW,SAHA;AAIX,UAAU,SAJC;AAKX,aAAY,SALD;AAMX,eAAa;AANF,CAAf;;AASA,MAAMC,SAAS,GAAKT,KAAF,IAAa;AAE3B,QAAMU,YAAY,GAAGb,OAAO,CAAED,MAAF,CAAP,CAAkB;AACnCe,IAAAA,WAAW,EAAEX,KAAK,CAACY,KADgB;AAEnCA,IAAAA,KAAK,EAAEZ,KAAK,CAACY,KAFsB;AAGnCC,IAAAA,eAAe,EAAEL,MAAM,CAAER,KAAK,CAACY,KAAR,CAHY;AAInC,eAAW;AACP;AACAE,MAAAA,MAAM,kBAAYd,KAAK,CAACY,KAAlB,SAFC;AAGPC,MAAAA,eAAe,EAAEb,KAAK,CAACY,KAHhB;AAIPA,MAAAA,KAAK,EAAE;AAJA,KAJwB;AAUnCG,IAAAA,MAAM,EAAE,KAV2B,CAWnC;;AAXmC,GAAlB,CAArB;AAcA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEUf,KAAK,CAACY,KAAN,KAAgB,SAAhB,IAA6BZ,KAAK,CAACY,KAAN,KAAgB,WAA/C,GACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,UAAU,CAAEJ,KAAK,CAACgB,KAAR,CAAV,CAA0BC,GAA1B,CAA+BC,KAAK,IAAI;AACtC,WACI;AAAI,MAAA,EAAE,EAAG,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkB,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAKlB,KAAK,CAACmB,OAAN,IAAiB,UAA3C;AAAwD,MAAA,KAAK,EAAKnB,KAAK,CAACY,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAlB,MADJ;AAGH,GAJC,CADN,CADA,GAUA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,UAAU,CAAEJ,KAAK,CAACgB,KAAR,CAAV,CAA0BC,GAA1B,CAA+BG,GAAG,IAAI;AACpC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAG,OAAnB;AAA2B,MAAA,KAAK,EAAGpB,KAAK,CAACY,KAAzC;AAAiD,MAAA,OAAO,EAAKZ,KAAK,CAACmB,OAAN,IAAiB,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAL,MADJ;AAGH,GAJC,CADN,CAZR,CADJ;AAwBH,CAxCD;;AA0CA,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { styled  as styledm } from '@material-ui/styles';\n// import { engineering } from '../MockData.js';\n\nconst Wrapper = styled.div`{\n    width: ${ props => props.width || '20vw' } \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: white;\n    // background-color: whitesmoke;\n}`\n\nconst List = styled.ul`{\n    // border: solid silver 1px;\n    display: flex;\n    // flex-direction: column;\n    height: 100%;\n    align-items: space-around;\n    display: flex;\n    flex-direction: column;\n}`\n\nconst getButtons = ( cnt ) => {\n    let buttons = [];\n    while ( cnt > 0 ) {\n        buttons.push( cnt );\n        cnt --;\n    }\n    return buttons;\n}\nconst colors = {\n    'red' : '#ffebee',\n    'green' : '#e8f5e9',\n    'purple' : '#ede7f6',\n    'blue' :  '#e3f2fd',\n    'primary' : '#e8eaf6',\n    'secondary': '#fce4ec'\n}  \n\nconst SearchTab = ( props ) => {\n\n    const CustomButton = styledm( Button )({\n        borderColor: props.color,\n        color: props.color,\n        backgroundColor: colors[ props.color ],\n        '&:hover': {\n            // border: `solid ${colors[ props.color ]} 2px`,\n            border: `solid ${ props.color } 1px`,\n            backgroundColor: props.color,\n            color: 'white'\n        },\n        margin: '8px',\n        // border: 'none'\n    });\n\n    return (\n        <Wrapper >\n            {\n                ( props.color === 'primary' || props.color === 'secondary' ) ?\n                <List>\n                    { getButtons( props.count ).map( topic => {\n                        return (\n                            <li id = 'topic'> <CustomButton variant = { props.variant || 'outlined' } color = { props.color } > Abnormal Psychology   </CustomButton> </li>\n                        )\n                    })\n                    }\n                </List> \n                :\n                <List>\n                    { getButtons( props.count ).map( num => {\n                        return (\n                            <li> <CustomButton id = 'topic' color={ props.color } variant = { props.variant || 'outlined' } > Abnormal Psychology  </CustomButton> </li>\n                        )\n                    })\n                    }\n                </List>\n            }\n        </Wrapper>\n    )\n}\n\nexport default SearchTab;"]},"metadata":{},"sourceType":"module"}