{"ast":null,"code":"var faker = require('faker');\n\nconst createTopics = (amount = 31) => {\n  let mockTopics = ['Economics', 'Politics', 'Conspiracy', 'Philosophy', 'Artificial Intelligence', 'Psychology'];\n  let topics = [];\n\n  while (amount > 0) {\n    let topic = {\n      title: mockTopics[amount] || faker.commerce.department()\n    };\n    topics.push(topic);\n    amount--;\n  }\n\n  return topics;\n};\n\nexport let topics = createTopics();\n\nconst createNotifications = (amount = 10) => {\n  let actions = ['protested', 'extended', 'commented', 'reacted', 'shared'];\n  let objects = ['post', 'comment', 'resource'];\n  let notifications = [];\n\n  while (amount > 0) {\n    let notif = {\n      person: \"\".concat(faker.name.firstName(), \" \").concat(faker.name.lastName()),\n      action: actions[faker.random.number(actions.length)],\n      object: objects[faker.random.number(objects.length)] // time: faker.date.recent()\n\n    };\n    notifications.push(notif);\n    amount--;\n  }\n\n  return notifications;\n};\n\nexport let notifications = createNotifications();\n\nconst createPosts = (amount = 20) => {\n  let posts = [];\n\n  while (amount > 0) {\n    let post = {\n      content: faker.lorem.paragraphs(3),\n      protestCount: 1,\n      commentCount: 1,\n      extensionCount: 1,\n      reactionsCount: 20,\n      avatar: faker.image.avatar(),\n      username: faker.internet.userName()\n    };\n    posts.push(post);\n    amount--;\n  }\n\n  return posts;\n};\n\nexport let posts = createPosts();\n\nconst createResources = (amount = 20) => {\n  let resources = [];\n\n  while (amount > 0) {\n    let resource = {\n      name: 'Yanna Faith',\n      alignmentScore: '70',\n      classification: 'supporter',\n      requestDate: '12/31/1997',\n      decisionDate: '12/31/1997'\n    };\n    resources.push(resource);\n    amount--;\n  }\n\n  return resources;\n};\n\nexport let resources = createResources();\n\nconst createNetwork = (amount = 20) => {\n  let people = [];\n\n  while (amount > 0) {\n    let node = {\n      name: \"\".concat(faker.name.firstName(), \" \").concat(faker.name.lastName()),\n      alignmentScore: '65',\n      classification: 'supporter',\n      requestDate: '12/31/1997',\n      decisionDate: '12/31/1997'\n    };\n    people.push(node);\n    amount--;\n  }\n\n  return resources;\n};\n\nexport let peopleNetwork = createNetwork();\n\nconst createComments = (amount = 20) => {\n  let comments = [];\n\n  while (amount > 0) {\n    let comment = {\n      content: faker.lorem.paragraphs(1),\n      protestCount: 1,\n      commentCount: 1,\n      extensionCount: 1,\n      reactionsCount: 20\n    };\n    comments.push(comment);\n    amount--;\n  }\n\n  return resources;\n};\n\nexport let comments = createComments();\n/* \n\nadult relationships article shared by steven paul king, most people will probably only have one sphere, but the most evolved will have many, and will even consciously try to have several. These would be good admin.\n\nworldview will get updated every so often, serves as an incentive for users to write in a broader spectrum of topics, to make the worldview algorithm more accurate.\n\n    Economy/Money\n\nMarket\nExchange Rates\nCrypto Currency\nForecasts\nMind\n\nCognitive Science\nNeuroscience\nPsychology\nPsychiatry/Mental Health\nIntelligence\nArtificial Intelligence\nDonald King\nMaths\n\nApplied \nTheoretical\nRidiculous and/or Debunked\nEngineering\n\nElectrical Engineering\nSoftware Engineering\nMechanical Engineering\nRobotics Engineering\nChemical Engineering\nCivil Engineering\nManagement Engineering\nReligion\n\nTheism\nAtheism\nSecularism\nScientism\n\n\n?? Secret societies of people with so many divergent identities that they are fractured in regular usage? \n\n\n*/","map":{"version":3,"sources":["/Users/yannafaith/Desktop/NuancityBlockstack/src/MockData.js"],"names":["faker","require","createTopics","amount","mockTopics","topics","topic","title","commerce","department","push","createNotifications","actions","objects","notifications","notif","person","name","firstName","lastName","action","random","number","length","object","createPosts","posts","post","content","lorem","paragraphs","protestCount","commentCount","extensionCount","reactionsCount","avatar","image","username","internet","userName","createResources","resources","resource","alignmentScore","classification","requestDate","decisionDate","createNetwork","people","node","peopleNetwork","createComments","comments","comment"],"mappings":"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","sourcesContent":["var faker = require( 'faker' );\n\nconst createTopics = ( amount = 31 ) => {\n    let mockTopics = [ 'Economics', 'Politics', 'Conspiracy', 'Philosophy', 'Artificial Intelligence', 'Psychology' ];\n    let topics = [];\n\n    while ( amount > 0 ) {\n        let topic = {\n            title: mockTopics[ amount ] || faker.commerce.department(),\n        };\n        topics.push( topic );\n        amount --;\n    }\n    return topics;\n}\nexport let topics = createTopics();\n\nconst createNotifications = ( amount = 10 ) => {\n    let actions = [ 'protested', 'extended', 'commented', 'reacted', 'shared' ];\n    let objects = [ 'post', 'comment', 'resource' ];\n    let notifications = [];\n\n    while ( amount > 0 ) {\n        let notif = {\n            person: `${ faker.name.firstName() } ${ faker.name.lastName() }`,\n            action: actions[ faker.random.number( actions.length ) ],\n            object: objects[ faker.random.number( objects.length ) ],\n            // time: faker.date.recent()\n        };\n        notifications.push( notif );\n        amount --;\n    }\n    return notifications;\n}\nexport let notifications = createNotifications();\n\nconst createPosts = ( amount = 20 ) => {\n    let posts = [];\n    while ( amount > 0 ) {\n       let post = {\n            content: faker.lorem.paragraphs( 3 ),\n            protestCount: 1,\n            commentCount: 1,\n            extensionCount: 1,\n            reactionsCount: 20,\n            avatar: faker.image.avatar(),\n            username: faker.internet.userName(),\n        }\n        posts.push( post );\n        amount --;\n    }\n    return posts;\n}\nexport let posts = createPosts();\n\nconst createResources = ( amount = 20 ) => {\n    let resources = [];\n    while ( amount > 0 ) {\n       let resource = {  \n            name: 'Yanna Faith',\n            alignmentScore: '70',\n            classification: 'supporter',\n            requestDate: '12/31/1997',\n            decisionDate: '12/31/1997',\n        }\n        resources.push( resource );\n        amount --;\n    }\n    return resources;\n}\nexport let resources = createResources();\n\nconst createNetwork = ( amount = 20 ) => {\n    let people = [];\n    while ( amount > 0 ) {\n       let node = {  \n            name: `${ faker.name.firstName() } ${ faker.name.lastName() }`,\n            alignmentScore: '65',\n            classification: 'supporter',\n            requestDate: '12/31/1997',\n            decisionDate: '12/31/1997',\n        }\n        people.push( node );\n        amount --;\n    }\n    return resources;\n}\nexport let peopleNetwork = createNetwork();\n\nconst createComments = ( amount = 20 ) => {\n    let comments = [];\n    while ( amount > 0 ) {\n       let comment = {\n        content: faker.lorem.paragraphs( 1 ),\n        protestCount: 1,\n        commentCount: 1,\n        extensionCount: 1,\n        reactionsCount: 20\n    }\n        comments.push( comment );\n        amount --;\n    }\n    return resources;\n}\nexport let comments = createComments();\n\n\n/* \n\nadult relationships article shared by steven paul king, most people will probably only have one sphere, but the most evolved will have many, and will even consciously try to have several. These would be good admin.\n\nworldview will get updated every so often, serves as an incentive for users to write in a broader spectrum of topics, to make the worldview algorithm more accurate.\n\n    Economy/Money\n\nMarket\nExchange Rates\nCrypto Currency\nForecasts\nMind\n\nCognitive Science\nNeuroscience\nPsychology\nPsychiatry/Mental Health\nIntelligence\nArtificial Intelligence\nDonald King\nMaths\n\nApplied \nTheoretical\nRidiculous and/or Debunked\nEngineering\n\nElectrical Engineering\nSoftware Engineering\nMechanical Engineering\nRobotics Engineering\nChemical Engineering\nCivil Engineering\nManagement Engineering\nReligion\n\nTheism\nAtheism\nSecularism\nScientism\n\n\n?? Secret societies of people with so many divergent identities that they are fractured in regular usage? \n\n\n*/"]},"metadata":{},"sourceType":"module"}