{"ast":null,"code":"import _slicedToArray from \"/Users/yannafaith/Desktop/NuancityBlockstack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yannafaith/Desktop/NuancityBlockstack/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport NewUserPage from './views/NewUserPage.js';\nimport Nav from './components/Nav.jsx';\nimport { SinglePost } from './views/SinglePost.js';\nimport Landing from './views/Landing.js';\nimport Topics from './views/Topics.js';\nimport Dashboard from './views/Dashboard.js';\nimport TopicFeed from './views/TopicFeed.js';\nimport { Route } from \"react-router-dom\";\nimport { UserSession, AppConfig } from 'blockstack';\nimport './App.css';\n\nconst App = () => {\n  const appConfig = new AppConfig();\n  const userSession = new UserSession({\n    appConfig: appConfig\n  });\n\n  const handleSignIn = e => {\n    e.preventDefault();\n    userSession.redirectToSignIn('http://localhost:3000/newUser');\n  };\n\n  const handleSignOut = e => {\n    e.preventDefault();\n    userSession.signUserOut('http://localhost:3000/');\n  };\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    if (!userSession.isUserSignedIn() && userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(userData => {\n        window.history.replaceState({}, document.title, \"/\");\n        setUser(userData);\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    session: userSession,\n    data: user,\n    signIn: handleSignIn,\n    signOut: handleSignOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/newUser\",\n    component: () => React.createElement(NewUserPage, {\n      userSession: userSession,\n      handleSignOut: handleSignOut,\n      handleSignIn: handleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/topics\",\n    component: Topics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/topic\",\n    component: TopicFeed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/post\",\n    component: SinglePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default App; // componentWillMount() {\n//   const session = this.userSession\n//   if(!session.isUserSignedIn() && session.isSignInPending()) {\n//     session.handlePendingSignIn()\n//     .then((userData) => {\n//       if(!userData.username) {\n//         throw new Error('This app requires a username.')\n//       }\n//       window.location = `/kingdom/${userData.username}`\n//     })\n//   }\n// }","map":{"version":3,"sources":["/Users/yannafaith/Desktop/NuancityBlockstack/src/App.js"],"names":["React","useState","useEffect","NewUserPage","Nav","SinglePost","Landing","Topics","Dashboard","TopicFeed","Route","UserSession","AppConfig","App","appConfig","userSession","handleSignIn","e","preventDefault","redirectToSignIn","handleSignOut","signUserOut","user","setUser","isUserSignedIn","isSignInPending","handlePendingSignIn","then","userData","window","history","replaceState","document","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NewUserPage from './views/NewUserPage.js';\nimport Nav from './components/Nav.jsx';\nimport { SinglePost } from './views/SinglePost.js';\nimport Landing from './views/Landing.js';\nimport Topics from './views/Topics.js';\nimport Dashboard from './views/Dashboard.js';\nimport TopicFeed from './views/TopicFeed.js';\nimport { Route } from \"react-router-dom\";\nimport { UserSession, AppConfig } from 'blockstack';\nimport './App.css';\n\nconst App = () => {\n\n  const appConfig = new AppConfig();\n  const userSession = new UserSession( { appConfig: appConfig } );\n\n  const handleSignIn = ( e ) =>  {\n    e.preventDefault();\n    userSession.redirectToSignIn( 'http://localhost:3000/newUser' );\n  }\n\n  const handleSignOut = ( e ) => {\n    e.preventDefault();\n    userSession.signUserOut( 'http://localhost:3000/' );\n  }\n\n  const [ user, setUser ] = useState( null );\n\n  useEffect( ( ) => {\n    if ( !userSession.isUserSignedIn() && userSession.isSignInPending() ) {\n      userSession.handlePendingSignIn().then( ( userData  ) => {\n        window.history.replaceState({}, document.title, \"/\")\n        setUser( userData );\n    })\n  }});\n\n    return (\n      <div className = \"App\" >\n        <Nav \n          session = { userSession }\n          data = { user }\n          signIn = { handleSignIn } \n          signOut = { handleSignOut } \n        />\n        <Route \n          path = '/newUser' \n          component = { () => <NewUserPage \n            userSession = { userSession } \n            handleSignOut = { handleSignOut } \n            handleSignIn = { handleSignIn } \n            />\n          }\n        />\n        <Route exact path='/' component={ Landing } />\n        <Route path='/topics' component={ Topics } />\n        <Route path='/topic' component={ TopicFeed } />\n        <Route path='/dashboard' component={ Dashboard } />\n        <Route path='/post' component={ SinglePost } />\n      </div>\n    );\n\n}\n\n\nexport default App;\n\n\n// componentWillMount() {\n//   const session = this.userSession\n//   if(!session.isUserSignedIn() && session.isSignInPending()) {\n//     session.handlePendingSignIn()\n//     .then((userData) => {\n//       if(!userData.username) {\n//         throw new Error('This app requires a username.')\n//       }\n//       window.location = `/kingdom/${userData.username}`\n//     })\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}