{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yannafaith/Desktop/NuancityBlockstack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yannafaith/Desktop/NuancityBlockstack/src/views/SinglePost.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"{\\n    // border: solid red 2px;\\n    display: flex;\\n}\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"{\\n    // border: solid red 2px;\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Post from '../components/Post.jsx';\nimport { posts } from '../MockData.js';\n\nvar faker = require('faker'); // const drawerProps = {\n//     width: 25,\n//     height: 100,\n// };\n// const MainProps = {\n//     width: 100 - drawerProps.width,\n//     height: 100,\n// }\n\n\nconst Wrapper = styled.section(_templateObject());\nconst Top = styled.div(_templateObject2()); // const PostStats = styled.div`{\n//     // border: solid red 2px;\n//     width: ${ drawerProps.width }vw;\n//     height: ${ drawerProps.height }vh;\n//     background-color: whitesmoke;\n// }`\n// const PostDiscussion = styled.div`{\n//     // border: solid blue 2px;\n//     width: ${ MainProps.width }vw;\n//     height: ${ MainProps.height }vh;\n//     display: flex;\n//     overflow: scroll;\n//     flex-direction: column;\n// }`\n\nexport const SinglePost = props => {\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Post, {\n    showComments: true,\n    isParentPost: true,\n    username: faker.internet.userName(),\n    content: posts[0].content,\n    avatar: posts[0].avatar,\n    time: posts[0].time,\n    reactionCount: props.reactionCount,\n    commentCount: props.commentCount,\n    protestCount: props.protestCount,\n    extensionCount: props.extensionCount //=======\n\n    /* =========== comments properties ================ */\n    ,\n    comments: props.commentsCount > 0 ? true : false,\n    fullPost: true,\n    fullPostWithCommetns: true,\n    partPost: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/yannafaith/Desktop/NuancityBlockstack/src/views/SinglePost.js"],"names":["React","styled","Post","posts","faker","require","Wrapper","section","Top","div","SinglePost","props","internet","userName","content","avatar","time","reactionCount","commentCount","protestCount","extensionCount","commentsCount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,OAAO,GAAGL,MAAM,CAACM,OAAV,mBAAb;AAIA,MAAMC,GAAG,GAAGP,MAAM,CAACQ,GAAV,oBAAT,C,CAKI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ,OAAO,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC/B,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,YAAY,EAAK,IADrB;AAEI,IAAA,YAAY,EAAK,IAFrB;AAGI,IAAA,QAAQ,EAAKP,KAAK,CAACQ,QAAN,CAAeC,QAAf,EAHjB;AAII,IAAA,OAAO,EAAKV,KAAK,CAAE,CAAF,CAAL,CAAWW,OAJ3B;AAKI,IAAA,MAAM,EAAKX,KAAK,CAAE,CAAF,CAAL,CAAWY,MAL1B;AAMI,IAAA,IAAI,EAAKZ,KAAK,CAAE,CAAF,CAAL,CAAWa,IANxB;AAOI,IAAA,aAAa,EAAKL,KAAK,CAACM,aAP5B;AAQI,IAAA,YAAY,EAAKN,KAAK,CAACO,YAR3B;AASI,IAAA,YAAY,EAAKP,KAAK,CAACQ,YAT3B;AAUI,IAAA,cAAc,EAAKR,KAAK,CAACS,cAV7B,CAWI;;AACA;AAZJ;AAaI,IAAA,QAAQ,EAAKT,KAAK,CAACU,aAAN,GAAsB,CAAtB,GAA0B,IAA1B,GAAiC,KAblD;AAcI,IAAA,QAAQ,EAAK,IAdjB;AAeI,IAAA,oBAAoB,EAAK,IAf7B;AAgBI,IAAA,QAAQ,EAAK,KAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAmBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ;AA6CH,CA9CM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Post from '../components/Post.jsx';\nimport { posts } from '../MockData.js';\nvar faker = require('faker');\n\n\n// const drawerProps = {\n//     width: 25,\n//     height: 100,\n// };\n\n// const MainProps = {\n//     width: 100 - drawerProps.width,\n//     height: 100,\n// }\n\nconst Wrapper = styled.section`{\n    // border: solid red 2px;\n}`\n\nconst Top = styled.div`{\n    // border: solid red 2px;\n    display: flex;\n}`\n\n    // const PostStats = styled.div`{\n    //     // border: solid red 2px;\n    //     width: ${ drawerProps.width }vw;\n    //     height: ${ drawerProps.height }vh;\n    //     background-color: whitesmoke;\n    // }`\n\n    // const PostDiscussion = styled.div`{\n    //     // border: solid blue 2px;\n    //     width: ${ MainProps.width }vw;\n    //     height: ${ MainProps.height }vh;\n    //     display: flex;\n    //     overflow: scroll;\n    //     flex-direction: column;\n    // }`\n\nexport const SinglePost = props => {\n    return (\n        <Wrapper>\n            <Post \n                showComments = { true }\n                isParentPost = { true }\n                username = { faker.internet.userName() }\n                content = { posts[ 0 ].content }\n                avatar = { posts[ 0 ].avatar }\n                time = { posts[ 0 ].time }\n                reactionCount = { props.reactionCount }\n                commentCount = { props.commentCount }\n                protestCount = { props.protestCount }\n                extensionCount = { props.extensionCount }\n                //=======\n                /* =========== comments properties ================ */\n                comments = { props.commentsCount > 0 ? true : false }\n                fullPost = { true }\n                fullPostWithCommetns = { true }\n                partPost = { false }\n            />\n            <Top>\n                {/* <PostStats></PostStats> */}\n                {/* <PostDiscussion>\n                    {\n                        posts.map( comm => {\n                            return (\n                                <Post\n                                    showComments = { true }\n                                    isParentPost = { false }\n                                    username = { faker.internet.userName() }\n                                    content = { posts[ 0 ].content }\n                                    avatar = { posts[ 0 ].avatar }\n                                    time = { posts[ 0 ].time }\n                                    commentContent = { comm.commentContent }\n                                    reactionCount = { comm.reactionCount }\n                                    replyCount = { comm.replyCount }\n                                />\n                            )\n                            \n                        })\n                    }\n                </PostDiscussion> */}\n            </Top>\n        </Wrapper>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}